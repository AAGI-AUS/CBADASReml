[{"path":"https://aagi-aus.github.io/CBADASReml/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rippo","title":"Contributing to rippo","text":"outlines propose change rippo. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to rippo","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to rippo","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to rippo","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"AAGI-AUS/rippo\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to rippo","text":"use air formatting code style. New code follow formatting guidelines found air.toml. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to rippo","text":"Please note rippo project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"introduction","dir":"Articles","previous_headings":"CBADASReml","what":"Introduction","title":"Small-plot analysis","text":"typical type experimental analysis package assist small plot trial. show general workflow performing small-plot analysis function package can used. Analysis small plot trials done using linear mixed-effects models (LMMs), using ASReml glmmTMB, package contains helper functions type modelling. Note trial design handled package, recommend use {FielDHub} creating small plot trial designs.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"mathematical-background","dir":"Articles","previous_headings":"CBADASReml","what":"Mathematical Background","title":"Small-plot analysis","text":"Let: y=Xb+Zu+e\\begin{equation*} y = X b + Z u + e \\end{equation*} y∈ℝny \\\\mathbb{R}^{n} vector observations. b∈ℝpb \\\\mathbb{R}^{p} vector fixed effects. X∈ℝn×pX \\\\mathbb{R}^{n \\times p} design matrix fixed effects. u∈ℝqu \\\\mathbb{R}^{q} vector random effects. Z∈ℝn×qZ \\\\mathbb{R}^{n \\times q} design matrix random effects. e∈ℝne \\\\mathbb{R}^{n} vector residuals. assumed vectors uu ee independent, joint distribution multivariate Gaussian described : [ue]∼N([00],[G00R])\\begin{equation*} \\begin{bmatrix} u \\\\ e \\end{bmatrix} \\sim N \\bigg(   \\begin{bmatrix}   0 \\\\   0   \\end{bmatrix}   ,   \\begin{bmatrix}   G & 0 \\\\   0 & R   \\end{bmatrix} \\bigg) \\end{equation*} GG RR covariance matrices uu ee functions variance parameters σg\\sigma_g σr\\sigma_r, finally dependent variable yy described : y∼N(Xb,ZGZ⊺+R)\\begin{equation*} y \\sim N \\big( X b , Z G Z^\\intercal + R \\big) \\end{equation*} GG RR covariance matrices, covariance structures, important. represent way random effects residuals behave, σg\\sigma_g σr\\sigma_r, covariance structure parameters things try estimate use ASReml. case independent identically distributed (IID) residual structures, residual covariance parameter σr\\sigma_r variance component σe2\\sigma_e^2.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"exploratory-data-analysis","dir":"Articles","previous_headings":"CBADASReml > Mathematical Background","what":"Exploratory Data Analysis","title":"Small-plot analysis","text":"gathering data experiment, useful perform exploratory data analysis raw data, likely use combination tidyverse gplot2 , visualise outliers, data distribution, etc. order get preliminary grasp working , observe data issues hinder actual analysis. assistance process, function exploratory_table provided.","code":"CBADASReml::exploratory_table(     data = oats,     response = \"yield\",     groupby = c(\"Variety\", \"Nitrogen\") ) #>        Variety Nitrogen             mean median               sd #> 1  Golden_rain    0_cwt               80     75 21.0047613649858 #> 2  Golden_rain  0.2_cwt             98.5  102.5 13.4721935853075 #> 3  Golden_rain  0.4_cwt 114.666666666667    110 29.9443929086343 #> 4  Golden_rain  0.6_cwt 124.833333333333  129.5 20.8750249500849 #> 5   Marvellous    0_cwt 86.6666666666667   92.5 16.5730705262081 #> 6   Marvellous  0.2_cwt            108.5  111.5 26.8533051969399 #> 7   Marvellous  0.4_cwt 117.166666666667  118.5 9.78604448521805 #> 8   Marvellous  0.6_cwt 126.833333333333  122.5 20.2920345620311 #> 9      Victory    0_cwt             71.5     65   20.59854363784 #> 10     Victory  0.2_cwt 89.6666666666667   89.5 22.5092573548455 #> 11     Victory  0.4_cwt 110.833333333333    106 26.0108951531213 #> 12     Victory  0.6_cwt            118.5  114.5 30.0915270466622 #>                  cv reps min max     range #> 1  26.2559517062322    6  60 117  60 - 117 #> 2  13.6773538937132    6  82 114  82 - 114 #> 3  26.1142961412508    6  86 161  86 - 161 #> 4  16.7223163819105    6  96 149  96 - 149 #> 5  19.1227736840862    6  63 105  63 - 105 #> 6  24.7495900432626    6  70 140  70 - 140 #> 7  8.35224280388454    6 104 132 104 - 132 #> 8  15.9989760016014    6  99 156  99 - 156 #> 9   28.809151941035    6  53 111  53 - 111 #> 10  25.103260990534    6  64 130  64 - 130 #> 11 23.4684768298838    6  81 157  81 - 157 #> 12 25.3936937102634    6  86 174  86 - 174"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"model-fitting-and-validation","dir":"Articles","previous_headings":"CBADASReml > Mathematical Background","what":"Model Fitting and Validation","title":"Small-plot analysis","text":"may use R package asreml follows implement LMM. purpose vignette fit different models, can demonstrate different techniques package. first model, mod_oats, using oats data:","code":"# The needs to be ordered so that the model can run oats <- oats[order(oats$Column), ]  mod_oats <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~ idv(Blocks) + idv(Blocks):id(Wplots),     residual = ~ ar1(Column):ar1(Row),     data = oats,     trace = FALSE ) #> Warning in asreml(fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen, : Some #> components changed by more than 1% on the last iteration  mod_oats <- update(mod_oats, aom = TRUE)  mod_rats <- asreml(     fixed = weight ~ littersize + Sex + Dose,     random = ~idv(Dam),     residual = ~units,     data = rats,     trace = FALSE )  mod_rats <- update(mod_rats, aom = TRUE)"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"data","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"n=72n = 72 (number observations) p=3p = 3 (number fixed effects, including interaction effect) q=2q = 2 (number random effects, blocks, plots within blocks)","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"y","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"yield y∈ℝ72y \\\\mathbb{R}^{72} (72×172 \\times 1) vector.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"x","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"Variety, Nitrogen interaction Variety:Nitrogen X∈ℝ72×3X \\\\mathbb{R}^{72 \\times 3} (72×372 \\times 3) matrix.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"b","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"3 fixed effects continuous, therefore fixed effects vector given b∈ℝ3×1b \\\\mathbb{R}^{3 \\times 1}","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"z","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"Blocks Blocks:Wplots make Z∈ℝn×qZ \\\\mathbb{R}^{n \\times q} matrix. Since factors, level treated ’s dummy variable. end two ZiZ_i matrices make Z=[Z1Z2]Z = [ \\; Z_1 \\; Z_2 \\; ] given follows (ordered respective variables): Z1=[100000⋮×10000001000000100000⋮×110000⋮]∈ℝ72×6\\begin{equation*} Z_{1} = \\begin{bmatrix} 1          & 0 & 0 & 0 & 0 & 0 \\\\ \\vdots \\times \\text{10} & 0 & 0 & 0 & 0 & 0 \\\\ 1          & 0 & 0 & 0 & 0 & 0 \\\\ 0          & 1 & 0 & 0 & 0 & 0 \\\\ 0          & \\vdots \\times \\text{11} & 0 & 0 & 0 & 0 \\\\            &   & \\vdots &   &   & \\end{bmatrix} \\\\mathbb{R}^{72 \\times 6} \\end{equation*} Z2=[100000000000000000⋮×2000000000000000001000000000000000000100000000000000000⋮×20000000000000000⋮]∈ℝ72×18\\begin{equation*} Z_{2} = \\begin{bmatrix} 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ \\vdots \\times \\text{2} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & \\vdots \\times \\text{2} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ &  &  &  &  &  &  &  & \\vdots &  &  &  &  &  &  &  &  & \\end{bmatrix} \\\\mathbb{R}^{72 \\times 18} \\end{equation*} column Z1Z_1 represents 66Blocks, columns Z2Z_2 represent 6×3=186 \\times 3 = 18Blocks ×\\timesWplots.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"u","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"u=[u1u2]u = \\begin{bmatrix} u_1 \\\\ u_2 \\end{bmatrix} u1∼N(0,G1)∈ℝ6u_1 \\sim N(0, G_1) \\\\mathbb{R}^{6} u2∼N(0,G2)∈ℝ18u_2 \\sim N(0, G_2) \\\\mathbb{R}^{18}.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"g","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"G1=σ12I6G_1 = \\sigma_1^2 I_6 (I6I_6 6×66 \\times 6 identity matrix) G2=(σ22I6)⊗I3G_2 = (\\sigma_2^2 I_6) \\otimes I_3 G=⨁=12Gi=[σ12I600(σ22I6⊗I3)]G = \\bigoplus_{= 1}^2 G_i = \\begin{bmatrix} \\sigma_1^2 I_6 & 0 \\\\ 0 & (\\sigma_2^2 I_6 \\otimes I_3) \\end{bmatrix}","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"e","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"e∼N(0,R)e \\sim N(0, R) RR RR structure","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"r","dir":"Articles","previous_headings":"","what":"Small-plot analysis","title":"Small-plot analysis","text":"R=Σc(ϕc)⊗Σr(ϕr)R = \\Sigma_c(\\phi_c) \\otimes \\Sigma_r(\\phi_r) ϕ\\phi refers correlation within columns (ϕc\\phi_c) rows (ϕr\\phi_r). second model, mod_rats, using rats data: weight yy vector. littersize, Sex Dose XX matrix. u∈ℝd∼N(0,G)u \\\\mathbb{R}^d \\sim N(0, G) ZZ design matrix Dam. G=σd2IdG = \\sigma_d^2 I_d. e∈ℝn∼N(0,R)e \\\\mathbb{R}^n \\sim N(0, R) R=σe2InR = \\sigma_e^2 I_n Upon executing R, ASReml-R code attempt estimate variance components σd2\\sigma_d^2 σe2\\sigma_e^2, using REML algorithm.","code":""},{"path":[]},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"plot-asreml","dir":"Articles","previous_headings":"CBADASReml > Function examples > Traditional Diagnostics (ASReml-R)","what":"plot.asreml","title":"Small-plot analysis","text":"","code":"plot(mod_oats)"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"plotvariogrammod","dir":"Articles","previous_headings":"CBADASReml > Function examples > Traditional Diagnostics (ASReml-R)","what":"plot(varioGram(mod))","title":"Small-plot analysis","text":"","code":"plot(varioGram(mod_oats))"},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"outlier_summary","dir":"Articles","previous_headings":"CBADASReml > Function examples > CBADASReml Diagnostics","what":"outlier_summary","title":"Small-plot analysis","text":"purpose outlier_summary function observe potential outliers can discussed data provider. example rats dataset included within ASReml-R.","code":"outlier_summary(mod_rats) #> [1] \"Outliers detected: 2\" #>    Dose Sex littersize Dam weight units combined_trt residuals #> 56    C   F         13   5   5.02    56       13_F_C -4.090506 #> 66    C   F          9   6   3.68    66        9_F_C -7.941340 #>     Dose Sex littersize Dam weight units combined_trt  residuals #> 56     C   F         13   5   5.02    56       13_F_C -4.0905065 #> 57     C   F         13   5   6.04    57       13_F_C -1.4769901 #> 53     C   F         13   5   7.16    53       13_F_C  1.3927533 #> 55     C   F         13   5   7.14    55       13_F_C  1.3415079 #> 54     C   F         13   5   7.09    54       13_F_C  1.2133944 #> 129    C   F         13  10   5.92   129       13_F_C -1.1145276 #> 126    C   F         13  10   6.67   126       13_F_C  0.8050510 #> 128    C   F         13  10   6.53   128       13_F_C  0.4467297 #> 130    C   F         13  10   6.52   130       13_F_C  0.4211353 #> 125    C   F         13  10   6.44   125       13_F_C  0.2163802 #> 131    C   F         13  10   6.44   131       13_F_C  0.2163802 #> 127    C   F         13  10   6.43   127       13_F_C  0.1907859 #> 66     C   F          9   6   3.68    66        9_F_C -7.9413397 #> 64     C   F          9   6   7.26    64        9_F_C  1.3727706 #> 65     C   F          9   6   6.58    65        9_F_C -0.3963900"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"directional_variograms","dir":"Articles","previous_headings":"CBADASReml > Function examples > CBADASReml Diagnostics","what":"directional_variograms","title":"Small-plot analysis","text":"purpose function view autocorrelation structure directions, rather traditional approach ASReml-R.","code":"plot(directional_variograms(mod_oats))"},{"path":[]},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"wald","dir":"Articles","previous_headings":"CBADASReml > Model Outputs > Traditional Outputs (ASReml-R)","what":"wald","title":"Small-plot analysis","text":"getting significance variable model","code":"wald(mod_rats) #> Wald tests for fixed effects. #> Response: weight #> Terms added sequentially; adjusted for those above. #>  #>               Df Sum of Sq Wald statistic             Pr(Chisq)     #> (Intercept)    1   1477.67         8981.5 < 0.00000000000000022 *** #> littersize     1      4.58           27.8   0.00000013118965070 *** #> Sex            1      9.80           59.5   0.00000000000001199 *** #> Dose           2      3.76           22.8   0.00001099619080491 *** #> residual (MS)         0.16                                          #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"predict","dir":"Articles","previous_headings":"CBADASReml > Model Outputs > Traditional Outputs (ASReml-R)","what":"predict","title":"Small-plot analysis","text":"","code":"predict.asreml(mod_oats, classify = \"Nitrogen\") #> $pvals #>  #> Notes: #> - The predictions are obtained by averaging across the hypertable #>   calculated from model terms constructed solely from factors in #>   the averaging and classify sets. #> - Use 'average' to move ignored factors into the averaging set. #> - The simple averaging set: Variety #> - The ignored set: Blocks,Wplots #>  #>   Nitrogen predicted.value std.error    status #> 1    0_cwt        77.76388  6.929776 Estimable #> 2  0.2_cwt       100.15097  6.896569 Estimable #> 3  0.4_cwt       114.41044  6.887489 Estimable #> 4  0.6_cwt       123.22901  6.912904 Estimable #>  #> $avsed #>  overall  #> 3.748427"},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"anova_table","dir":"Articles","previous_headings":"CBADASReml > Model Outputs","what":"anova_table","title":"Small-plot analysis","text":"Show ANOVA table multiple models, p-values effect response.","code":"rats[[\"newresp\"]] <- rats[[\"weight\"]] * runif(nrow(rats))  mod_rats2 <- asreml(     fixed = newresp ~ littersize + Sex + Dose,     random = ~idv(Dam),     residual = ~units,     data = rats,     trace = FALSE )  mod_rats2 <- update(mod_rats2, aom = TRUE)  anova_table(mod_rats, mod_rats2) #>       Effect weight newresp #> 1 littersize      0   0.134 #> 2        Sex      0   0.209 #> 3       Dose      0   0.869"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"pred_table","dir":"Articles","previous_headings":"CBADASReml > Model Outputs","what":"pred_table","title":"Small-plot analysis","text":"Get mean level fixed effect, well standard error, confidence intervals.","code":"pred_table(mod_rats, classify = \"Dose\") #> Warning in asremlPlus::predictPlus.asreml(mod, classify = classify, wald.tab = #> as.data.frame(asreml::wald(mod)), : Denominator degrees of freedom obtained #> using dDF.na method residual #>   Treatment     Mean Standard Error Lower CL Upper CL #> 1         C 6.410370      0.1060763 6.201667 6.619072 #> 2      High 5.554064      0.1482309 5.262423 5.845704 #> 3       Low 5.989315      0.1071587 5.778483 6.200147"},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"lsd_table","dir":"Articles","previous_headings":"CBADASReml > Least significant difference","what":"lsd_table","title":"Small-plot analysis","text":"Show least significant difference table:","code":"lsd_table(mod_rats, classify = \"Dose\") #>   treatment group      lsd    means #> 1         C     a 0.354997 6.410370 #> 2       Low     b 0.354997 5.989315 #> 3      High     c 0.354997 5.554064"},{"path":"https://aagi-aus.github.io/CBADASReml/articles/small_plot_analysis.html","id":"lsd_graph","dir":"Articles","previous_headings":"CBADASReml > Least significant difference","what":"lsd_graph","title":"Small-plot analysis","text":"Show LSD graph data:","code":"lsd_graph(mod_rats, classify = \"Dose\")"},{"path":"https://aagi-aus.github.io/CBADASReml/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kai Bagley. Author, maintainer. Jordan jordan.brown@curtin.edu.au Brown. Author. Adam H. adam.sparks@curtin.edu.au Sparks. Author. Curtin University. Funder, copyright holder.            http://www.curtin.edu.au/ Grains Research Development Corporation. Funder, copyright holder.            GRDC Project CUR2210-005OPX (AAGI-CU)","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bagley K, Brown Jj, Sparks Aa (2025). CBADASReml: Provides helper functions ASReml. R package version 0.1.0, https://aagi-aus.github.io/CBADASReml/.","code":"@Manual{,   title = {CBADASReml: Provides helper functions for ASReml},   author = {Kai Bagley and Jordan jordan.brown@curtin.edu.au Brown and Adam H. adam.sparks@curtin.edu.au Sparks},   year = {2025},   note = {R package version 0.1.0},   url = {https://aagi-aus.github.io/CBADASReml/}, }"},{"path":[]},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"Provides helper functions for ASReml","text":"{CBADASReml} available R-Universe pre-built binaries (easy way). get started:","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/index.html","id":"enable-this-universe","dir":"","previous_headings":"Installation instructions","what":"Enable this universe","title":"Provides helper functions for ASReml","text":"","code":"options(repos = c(     aagi_aus = 'https://aagi-aus.r-universe.dev',     CRAN = 'https://cloud.r-project.org'))"},{"path":"https://aagi-aus.github.io/CBADASReml/index.html","id":"install","dir":"","previous_headings":"Installation instructions","what":"Install","title":"Provides helper functions for ASReml","text":"","code":"install.packages(\"CBADASReml\")"},{"path":"https://aagi-aus.github.io/CBADASReml/index.html","id":"the-harder-way","dir":"","previous_headings":"Installation instructions","what":"The hard(er) way","title":"Provides helper functions for ASReml","text":"can install {CBADASReml} directly repository {pak} like :","code":"o <- options() # store default options  options(pkg.build_vignettes = TRUE)  if (!require(\"pak\"))   install.packages(\"pak\") pak::pak(\"AAGI-AUS/CBADASReml\")  options(o) # reset options"},{"path":"https://aagi-aus.github.io/CBADASReml/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Provides helper functions for ASReml","text":"detailed understanding package can used, fully worked example small-plot trial analysis: Small-Plot Case Study. analysis tries showcase function useful capacity.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Provides helper functions for ASReml","text":"contributions appreciated, please make sure follow Contribution Guidelines.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/CBADASReml-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CBADASReml: Provides helper functions for ASReml — CBADASReml-package","title":"CBADASReml: Provides helper functions for ASReml — CBADASReml-package","text":"package provides helper functions ASReml, particularly use small-plot trials.","code":""},{"path":[]},{"path":"https://aagi-aus.github.io/CBADASReml/reference/CBADASReml-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CBADASReml: Provides helper functions for ASReml — CBADASReml-package","text":"Maintainer: Kai Bagley kai.bagley@curtin.edu.au (ORCID) Authors: Jordan jordan.brown@curtin.edu.au Brown (ORCID) Adam H. adam.sparks@curtin.edu.au Sparks (ORCID) contributors: Curtin University (ROR) (http://www.curtin.edu.au/) [funder, copyright holder] Grains Research Development Corporation (ROR) (GRDC Project CUR2210-005OPX (AAGI-CU)) [funder, copyright holder]","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/anova_table.html","id":null,"dir":"Reference","previous_headings":"","what":"An ANOVA table Function — anova_table","title":"An ANOVA table Function — anova_table","text":"function allows observe ANOVA table multiple ASReml glmmTMB models.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/anova_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An ANOVA table Function — anova_table","text":"","code":"anova_table(..., n_digits = 3)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/anova_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An ANOVA table Function — anova_table","text":"... models use ANOVA table comparison values may : asreml glmmTMB n_digits numeric number digits round results .","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/anova_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An ANOVA table Function — anova_table","text":"data.frame dataframe containing ANOVA tables. Can used xtable produce LaTeX table.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/anova_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An ANOVA table Function — anova_table","text":"","code":"library(CBADASReml) library(asreml) test_data <- oats test_data[\"yield2\"] <- oats[\"yield\"] * runif(nrow(oats[\"yield\"])) mod1 <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~ idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~ idv(units),     data = test_data ) mod2 <- asreml(     fixed = yield2 ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~ idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~ idv(units),     data = test_data ) anova_table(mod1, mod2) #>             Effect yield yield2 #> 1          Variety 0.226  0.387 #> 2         Nitrogen 0.000  0.054 #> 3 Variety:Nitrogen 0.936  0.681  ## With glmmTMB models library(glmmTMB) Salamanders$count2 <- runif(nrow(Salamanders), 0, 10) mod3 <- glmmTMB( # Zero inflated model     count ~ spp * mined + (1 | site),     zi = ~ spp * mined,     data = Salamanders,     family = nbinom2 ) #> Warning: Model convergence problem; singular convergence (7). See vignette('troubleshooting'), help('diagnose') mod4 <- glmmTMB( # Hurdle model     count2 ~ spp * mined + (1 | site),     zi = ~ spp * mined,     data = Salamanders,     family = truncated_nbinom2 ) #> Warning: non-integer counts in a truncated_nbinom2 response variable #> Warning: non-integer counts in a truncated_nbinom2 model anova_table(mod3, mod4) #>      Effect count count2 #> 1       spp 0.000  0.476 #> 2     mined 0.000  0.275 #> 3 spp:mined 0.012  0.510"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/directional_variograms.html","id":null,"dir":"Reference","previous_headings":"","what":"A spatial variogram function for Single Site Data — directional_variograms","title":"A spatial variogram function for Single Site Data — directional_variograms","text":"function allows observe directional variograms 0 (vertical) 90 (horizontal) directions gridded small-plot trial data.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/directional_variograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A spatial variogram function for Single Site Data — directional_variograms","text":"","code":"directional_variograms(model)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/directional_variograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A spatial variogram function for Single Site Data — directional_variograms","text":"model asreml model residual structure.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/directional_variograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A spatial variogram function for Single Site Data — directional_variograms","text":"gstat::variogram Gstat variogram.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/directional_variograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A spatial variogram function for Single Site Data — directional_variograms","text":"","code":"library(asreml) model <- asreml(     fixed = yield ~ weed,     random = ~idv(Variety),     residual = ~ar1v(Row):id(Column),     data = wheat ) mod <- directional_variograms(model) plot(mod, multipanel = FALSE)   if (FALSE) { # \\dontrun{ # You can also plot using ggplot if you wish ggplot(     mod,     aes(x = dist, y = gamma, group = dir.hor, colour = factor(dir.hor)) ) +     geom_point() +     geom_line() +     facet_grid(~dir.hor, scales = \"free_x\") } # }"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/exploratory_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a summary table for the data with Mean, Median, SD, CV and Range. — exploratory_table","title":"Produces a summary table for the data with Mean, Median, SD, CV and Range. — exploratory_table","text":"function outputs summary statistics given data.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/exploratory_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a summary table for the data with Mean, Median, SD, CV and Range. — exploratory_table","text":"","code":"exploratory_table(data, response, groupby)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/exploratory_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a summary table for the data with Mean, Median, SD, CV and Range. — exploratory_table","text":"data data.frame data set summarised response character String variable name data response groupby character vector Vector strings names grouping variables data","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/exploratory_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a summary table for the data with Mean, Median, SD, CV and Range. — exploratory_table","text":"data.frame Summary table","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/exploratory_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces a summary table for the data with Mean, Median, SD, CV and Range. — exploratory_table","text":"","code":"exploratory_table(mtcars, response = \"mpg\", groupby = c(\"cyl\", \"gear\")) #>   cyl gear   mean median                sd               cv reps  min  max #> 1   4    3   21.5   21.5              <NA>             <NA>    1 21.5 21.5 #> 2   4    4 26.925  25.85  4.80736042810546 17.8546348304752    8 21.4 33.9 #> 3   4    5   28.2   28.2  3.11126983722081 11.0328717631944    2   26 30.4 #> 4   6    3  19.75  19.75   2.3334523779156 11.8149487489398    2 18.1 21.4 #> 5   6    4  19.75   20.1    1.552417469626  7.8603416183595    4 17.8   21 #> 6   6    5   19.7   19.7              <NA>             <NA>    1 19.7 19.7 #> 7   8    3  15.05   15.2  2.77439592114621 18.4345243929981   12 10.4 19.2 #> 8   8    5   15.4   15.4 0.565685424949239 3.67328198018986    2   15 15.8 #>         range #> 1 21.5 - 21.5 #> 2 21.4 - 33.9 #> 3   26 - 30.4 #> 4 18.1 - 21.4 #> 5   17.8 - 21 #> 6 19.7 - 19.7 #> 7 10.4 - 19.2 #> 8   15 - 15.8"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an LSD plot from an ASReml model — lsd_graph","title":"Create an LSD plot from an ASReml model — lsd_graph","text":"Generates table least significant differences (LSDs) given model.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an LSD plot from an ASReml model — lsd_graph","text":"","code":"lsd_graph(model, classify, ...)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an LSD plot from an ASReml model — lsd_graph","text":"model model generate LSDs . value may : asreml glmmTMB (yet implemented) classify character vector string specifying variables predict calculate LSDs . asreml models, passed classify argument predictPlus.asreml. ... Arguments pass predictPlus.asreml","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an LSD plot from an ASReml model — lsd_graph","text":"ggplot object Returns ggplot2 plot LSDs.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an LSD plot from an ASReml model — lsd_graph","text":"","code":"library(asreml) model <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~idv(units),     data = oats ) lsd_graph(model, classify = \"Variety\")"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Group treatments using results of paired t-test — lsd_group","title":"Group treatments using results of paired t-test — lsd_group","text":"Intended replacement agricolae::orderPvalue function, (maybe) better algorithm.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group treatments using results of paired t-test — lsd_group","text":"","code":"lsd_group(treatments, means, alpha, pvalues)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group treatments using results of paired t-test — lsd_group","text":"treatments character vector Character vector treatment names means numeric Vector treatment means/fitted values alpha numeric Significant difference threshold pvalues matrix numeric Matrix pvalues calculated via pairwise t-tests","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group treatments using results of paired t-test — lsd_group","text":"data.frame Dataframe treatment associated LSD group","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group treatments using results of paired t-test — lsd_group","text":"","code":"library(asreml) model <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~idv(units),     data = oats )  pred <- asremlPlus::predictPlus.asreml(     model,     classify = \"Variety\",     wald.tab = as.data.frame(asreml::wald(model, denDF = \"algebraic\")$Wald) ) #>  #>  #> #### Predictions for yield from Variety #>  #>  #> Notes: #> - The predictions are obtained by averaging across the hypertable #>   calculated from model terms constructed solely from factors in #>   the averaging and classify sets. #> - Use 'average' to move ignored factors into the averaging set. #> - The simple averaging set: Nitrogen #> - The ignored set: Blocks,Wplots #>  #>       Variety predicted.value standard.error upper.Confidence.limit #> 1 Golden_rain        104.5000       7.797539               121.8740 #> 2  Marvellous        109.7917       7.797539               127.1657 #> 3     Victory         97.6250       7.797539               114.9990 #>   lower.Confidence.limit est.status #> 1               87.12600  Estimable #> 2               92.41767  Estimable #> 3               80.25100  Estimable #>  #>  #> LSD values  #>  #> minimum LSD =  15.77278  #>  #> mean LSD =  15.77278  #>  #> maximum LSD =  15.77278  #>  #> (sed range / mean sed =  0.0000000000000126 ) #>  #>  #>  #> Variance matrix of the predicted values  #>  #> NULL #>  #>  #> All pairwise differences between predicted values  #>  #>             Golden_rain Marvellous Victory #> Golden_rain       0.000     -5.292   6.875 #> Marvellous        5.292      0.000  12.167 #> Victory          -6.875    -12.167   0.000 #>  #>  #> p values for all pairwise differences between predicted values  #>  #>             Golden_rain Marvellous Victory #> Golden_rain                  0.472   0.354 #> Marvellous        0.472              0.116 #> Victory           0.354      0.116         #>  #>  #> Standard errors of differences between predicted values  #>  #>             Golden_rain Marvellous Victory #> Golden_rain                  7.079   7.079 #> Marvellous        7.079              7.079 #> Victory           7.079      7.079          prob.matrix <- ifelse(is.na(pred$p.differences), 1, pred$p.differences) treatments <- colnames(prob.matrix) means <- pred$predictions$predicted.value alpha <- 0.05  lsd_group(     treatments,     means,     alpha,     prob.matrix ) #>     treatment group #> 1  Marvellous     a #> 2 Golden_rain     a #> 3     Victory     a"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an LSD table from an ASReml model — lsd_table","title":"Create an LSD table from an ASReml model — lsd_table","text":"Generates table least significant differences (LSDs) given model.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an LSD table from an ASReml model — lsd_table","text":"","code":"lsd_table(model, classify, ...)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an LSD table from an ASReml model — lsd_table","text":"model model object calculate LSDs . value may : asreml glmmTMB (yet implemented) classify character string specifying variables predict calculate LSDs . ... Arguments pass predictPlus.asreml","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an LSD table from an ASReml model — lsd_table","text":"data.frame LSD values.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/lsd_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an LSD table from an ASReml model — lsd_table","text":"","code":"library(asreml) model <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~ idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~ idv(units),     data = oats ) lsd_table(model, classify = \"Variety\") #>     treatment group      lsd    means #> 1  Marvellous     a 15.77278 109.7917 #> 2 Golden_rain     a 15.77278 104.5000 #> 3     Victory     a 15.77278  97.6250"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/outlier_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect outliers for small-plot trial analysis — outlier_summary","title":"Detect outliers for small-plot trial analysis — outlier_summary","text":"Provides summary outliers present asreml model. Gives context outliers showing responses factor combinations outliers","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/outlier_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect outliers for small-plot trial analysis — outlier_summary","text":"","code":"outlier_summary(model, cutoff = 3.5)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/outlier_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect outliers for small-plot trial analysis — outlier_summary","text":"model model object detect outliers . value may : asreml glmmTMB (yet implemented) cutoff numeric magnitude point's residual considered outlier.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/outlier_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect outliers for small-plot trial analysis — outlier_summary","text":"NULL Prints: number outliers. table outliers, . table relevant context factor combinations, outliers.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/outlier_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect outliers for small-plot trial analysis — outlier_summary","text":"","code":"library(asreml) model <- asreml(     fixed = weight ~ littersize + Dose + Sex + Dose:Sex,     random = ~idv(Dam),     residual = ~units,     data = rats ) outlier_summary(model) #> [1] \"No aom = T, Updating Model\" #> [1] \"Outliers detected: 2\" #>    Dose Sex littersize Dam weight units combined_trt residuals #> 56    C   F         13   5   5.02    56       13_C_F -4.020632 #> 66    C   F          9   6   3.68    66        9_C_F -7.877422 #>     Dose Sex littersize Dam weight units combined_trt  residuals #> 56     C   F         13   5   5.02    56       13_C_F -4.0206317 #> 53     C   F         13   5   7.16    53       13_C_F  1.4705108 #> 55     C   F         13   5   7.14    55       13_C_F  1.4191918 #> 57     C   F         13   5   6.04    57       13_C_F -1.4033581 #> 54     C   F         13   5   7.09    54       13_C_F  1.2908940 #> 129    C   F         13  10   5.92   129       13_C_F -1.0564320 #> 126    C   F         13  10   6.67   126       13_C_F  0.8629802 #> 128    C   F         13  10   6.53   128       13_C_F  0.5046899 #> 130    C   F         13  10   6.52   130       13_C_F  0.4790978 #> 125    C   F         13  10   6.44   125       13_C_F  0.2743605 #> 131    C   F         13  10   6.44   131       13_C_F  0.2743605 #> 127    C   F         13  10   6.43   127       13_C_F  0.2487683 #> 66     C   F          9   6   3.68    66        9_C_F -7.8774217 #> 64     C   F          9   6   7.26    64        9_C_F  1.4570300 #> 65     C   F          9   6   6.58    65        9_C_F -0.3159943"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/pred_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Prediction Table from Model — pred_table","title":"Generate Prediction Table from Model — pred_table","text":"Generate table predicted values CIs asreml glmmTMB model, specified variables asreml glmmTMB object. Created Matthew Nguyen.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/pred_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Prediction Table from Model — pred_table","text":"","code":"pred_table(   mod,   classify,   link_fun = \"identity\",   tmb_component = \"cond\",   tmb_type = \"response\",   factor_combine = TRUE,   trt_col_label = \"Treatment\" )"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/pred_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Prediction Table from Model — pred_table","text":"mod model object get predictions . value may : asreml glmmTBM classify character vector. Variable predictions made. asreml models, passed classify argument predictPlus.asreml. glmmTMB models used specs argument emmeans link_fun character vector. Specifies transformation function apply predictions. applies asreml objects. value may : \"identity\" (default) \"log\" \"inverse\" \"sqrt\" \"logit\" \"probit\" \"cloglog\" tmb_component character vector. Specifies component glmmTMB model get predictions. value may : \"cond\" (default) \"zi\" \"cmean\" \"response\" tmb_type character vector. Specifies  prediction type glmmTMB models. \"response\" supported moment. factor_combine Logical Whether combine factors classify single column output table. TRUE (default), factor levels concatenated labelled using trt_col_label. trt_col_label character vector. Specifies label combined factor column factor_combine TRUE. Defaults \"Treatment\"","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/pred_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Prediction Table from Model — pred_table","text":"data.frame. Contains predicted means, standard errors, confidence intervals specified variables. Includes following columns: Treatment combined factor levels, factor_combine TRUE. Mean predicted mean values. Standard Error standard errors predicted means. Lower CL lower confidence limits. Upper CL upper confidence limits. factor_combine FALSE, factors specified classify remain separate columns.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/pred_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Prediction Table from Model — pred_table","text":"","code":"library(CBADASReml) library(asreml) mod1 <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~ idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~ idv(units),     data = oats ) pred_table(mod1, classify = \"Variety\") #> Warning: Denominator degrees of freedom obtained using dDF.na method residual #>     Treatment     Mean Standard Error Lower CL Upper CL #> 1 Golden_rain 104.5000       7.797539 88.90260 120.0974 #> 2  Marvellous 109.7917       7.797539 94.19427 125.3891 #> 3     Victory  97.6250       7.797539 82.02760 113.2224"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/report_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"A prediction function for models with more than one variable to predict on. — report_tables","title":"A prediction function for models with more than one variable to predict on. — report_tables","text":"function outputs predictions factor single model. factor put separate excel sheet.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/report_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A prediction function for models with more than one variable to predict on. — report_tables","text":"","code":"report_tables(model, classify)"},{"path":"https://aagi-aus.github.io/CBADASReml/reference/report_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A prediction function for models with more than one variable to predict on. — report_tables","text":"model model generate predictions . value may : asreml glmmTBM (yet implemented) classify character string specifying factors model predict . multiple specified separate either * :. example Nitrogen:Variety Nitrogen*Variety.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/report_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A prediction function for models with more than one variable to predict on. — report_tables","text":"list data.frame list data frames. first data frame ANOVA model. remaining data frames prediction tables classify object.","code":""},{"path":"https://aagi-aus.github.io/CBADASReml/reference/report_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A prediction function for models with more than one variable to predict on. — report_tables","text":"","code":"library(asreml) model <- asreml(     fixed = yield ~ Variety + Nitrogen + Variety:Nitrogen,     random = ~idv(Blocks) + idv(Blocks):idv(Wplots),     residual = ~idv(units),     data = oats )  report_tables(     model,     classify = \"Variety:Nitrogen\" ) #> $Anova #>             Effect yield #> 1          Variety 0.226 #> 2         Nitrogen 0.000 #> 3 Variety:Nitrogen 0.936 #>  #> $Variety #>     treatment group      lsd    means #> 1  Marvellous     a 15.77278 109.7917 #> 2 Golden_rain     a 15.77278 104.5000 #> 3     Victory     a 15.77278  97.6250 #>  #> $Nitrogen #>   treatment group     lsd     means #> 1   0.6_cwt     a 8.93407 123.38889 #> 2   0.4_cwt     b 8.93407 114.22222 #> 3   0.2_cwt     c 8.93407  98.88889 #> 4     0_cwt     d 8.93407  79.38889 #>  #> $`Variety:Nitrogen` #>              treatment group      lsd     means #> 1   Marvellous,0.6_cwt     a 18.54066 126.83333 #> 2  Golden_rain,0.6_cwt    ab 18.54066 124.83333 #> 3      Victory,0.6_cwt    ab 18.54066 118.50000 #> 4   Marvellous,0.4_cwt   abc 18.54066 117.16667 #> 5  Golden_rain,0.4_cwt   abc 18.54066 114.66667 #> 6      Victory,0.4_cwt   abc 18.54066 110.83333 #> 7   Marvellous,0.2_cwt   bcd 18.54066 108.50000 #> 8  Golden_rain,0.2_cwt   cde 18.54066  98.50000 #> 9      Victory,0.2_cwt   def 18.54066  89.66667 #> 10    Marvellous,0_cwt   efg 18.54066  86.66667 #> 11   Golden_rain,0_cwt    fg 18.54066  80.00000 #> 12       Victory,0_cwt     g 18.54066  71.50000 #>   if (FALSE) { # \\dontrun{ # Using it to write with writexl tables <- excel_prediction_file(     model,     classify = \"Variety:Nitrogen\", )  writexl::write_xlsx(x = tables, path = \"Prediction_Tables.xlsx\") } # }"}]
